{"version":3,"sources":["components/navbar/NavBar.js","components/Layout.js","components/about_me/AboutMe.js","components/animation/Canvas.js","components/App.js","serviceWorker.js","index.js"],"names":["NavBarContainer","styled","div","NavGroup","Link","a","props","color","design_presets","black","NavBar","href","orange","React","Component","GridContainer","GridBody","GridHeader","Layout","this","children","TitleBackground","design_preset","background","opacity","Container","ContainerContent","AboutMeContainer","Name","p","Occupation","grey","Description","Contact","AboutMe","Board","canvas","Canvas","canvas_ref","createRef","state","inner_width","window","innerWidth","inner_height","innerHeight","p_outer_c_size","p_inner_c_size","number_of_p","particles","draw_particles","requestAnimationFrame","update_particles","bind","addEventListener","resize","setState","Math","random","ctx","current","getContext","i","length","position","x","y","fillStyle","beginPath","arc","particle_size","PI","fill","push","ref","width","height","GlobalStyle","createGlobalStyle","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d469c1ec.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport design_presets from '../design_presets/presets.json';\r\n\r\nconst NavBarContainer = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    font-size: 15px;\r\n    height: 100%;\r\n    width: 100%;\r\n`;\r\n\r\nconst NavGroup = styled.div`\r\n    position: relative;\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n    margin-right: 20px;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst Link = styled.a`\r\n    text-decoration: none;\r\n    color: ${(props) => (props.color ? props.color : design_presets['general-colors'].black)};\r\n    &:link,\r\n    &:visited {\r\n        text-decoration: none;\r\n        color: inherited;\r\n    }\r\n    margin-right: 20px;\r\n    margin-left: 20px;\r\n`;\r\n\r\nclass NavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavBarContainer>\r\n                <NavGroup>\r\n                    <Link href={'google.com'} color={design_presets['general-colors'].orange}>\r\n                        RESUME\r\n                    </Link>\r\n                    <Link href={'google.com'}>GITHUB</Link>\r\n                    <Link href={'google.com'}>LINKEDIN</Link>\r\n                </NavGroup>\r\n            </NavBarContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport NavBar from './navbar/NavBar';\r\n\r\nconst GridContainer = styled.div`\r\n    position: absolute;\r\n    display: grid;\r\n    grid-template-rows: 50px 1fr 3fr;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst GridBody = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst GridHeader = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nclass Layout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <GridContainer>\r\n                <GridHeader>\r\n                    <NavBar />\r\n                </GridHeader>\r\n                <GridBody>{this.props.children}</GridBody>\r\n            </GridContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport design_preset from '../design_presets/presets.json';\r\n\r\nconst TitleBackground = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: ${design_preset['title-container'].background};\r\n    opacity: ${design_preset['title-container'].opacity}%;\r\n    z-index: -1;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    margin-top: 20px;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst ContainerContent = styled.div`\r\n    display: grid;\r\n    width: 100%;\r\n    height: 90%;\r\n    margin: auto;\r\n    margin-left: -100%;\r\n    grid-template-columns: 2fr 1fr;\r\n`;\r\n\r\nconst AboutMeContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-left: 40px;\r\n`;\r\n\r\nconst Name = styled.p`\r\n    color: ${design_preset['general-colors'].orange};\r\n    font-size: 50px;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n`;\r\n\r\nconst Occupation = styled.p`\r\n    color: ${design_preset['general-colors'].grey};\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    margin-top: 0;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Description = styled.p`\r\n    color: ${design_preset['general-colors'].grey};\r\n    font-size: 15px;\r\n    width: 80%;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Contact = styled.p`\r\n    color: ${design_preset['general-colors'].grey};\r\n    font-size: 15px;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n`;\r\n\r\nclass AboutMe extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <TitleBackground />\r\n                <ContainerContent>\r\n                    <AboutMeContainer>\r\n                        <Name>MANDU SHI</Name>\r\n                        <Occupation>Software Developer</Occupation>\r\n                        <Description>\r\n                            ...I am a recent graduate with a Computer Science degree. I am passionate about anything\r\n                            related to programming and problem solving. To learn more about me feel free to contact me,\r\n                            or have a look at some of my projects. You can also find me on Github and LinkedIn.\r\n                        </Description>\r\n                        <Contact>\r\n                            <strong>email</strong>: mandushi.18@gmail.com\r\n                        </Contact>\r\n                        <Contact>\r\n                            <strong>phone</strong>: 07716045270\r\n                        </Contact>\r\n                    </AboutMeContainer>\r\n                </ContainerContent>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutMe;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Board = styled.canvas`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    opacity: 0.2;\r\n    z-index: -2;\r\n`;\r\n\r\nclass Canvas extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.canvas_ref = React.createRef();\r\n        this.state = {\r\n            inner_width: window.innerWidth,\r\n            inner_height: window.innerHeight,\r\n            p_outer_c_size: 7,\r\n            p_inner_c_size: 5,\r\n            number_of_p: 75,\r\n            particles: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.draw_particles();\r\n        requestAnimationFrame(this.update_particles.bind(this));\r\n        window.addEventListener('resize', this.resize.bind(this));\r\n    }\r\n\r\n    resize() {\r\n        this.setState({\r\n            inner_width: window.innerWidth,\r\n            inner_height: window.innerHeight,\r\n            particles: [],\r\n            // number_of_p: window.innerWidth * 0.07,\r\n        });\r\n        this.draw_particles();\r\n    }\r\n\r\n    particle_size() {\r\n        return this.state.p_inner_c_size + Math.random() * this.state.p_outer_c_size;\r\n    }\r\n\r\n    draw_particles() {\r\n        const canvas = this.canvas_ref.current;\r\n        const ctx = canvas.getContext('2d');\r\n        const particles = [...this.state.particles];\r\n        for (var i = this.state.particles.length; i < this.state.number_of_p; ++i) {\r\n            var position = {\r\n                x: Math.random() * this.state.inner_width,\r\n                y: (Math.random() * this.state.inner_height) / 1.5,\r\n            };\r\n\r\n            ctx.fillStyle = '#777777';\r\n            ctx.beginPath();\r\n            ctx.arc(position.x, position.y + this.state.inner_height / 1.5, this.particle_size(), 0, 2 * Math.PI);\r\n            ctx.fill();\r\n            ctx.beginPath();\r\n            particles.push(position);\r\n        }\r\n        this.setState({ particles });\r\n        // this.connect_particles();\r\n    }\r\n\r\n    update_particles() {\r\n        requestAnimationFrame(this.update_particles.bind(this));\r\n        for (var i = 0; i < this.state.particles.length; ++i) {}\r\n    }\r\n\r\n    connect_particles() {}\r\n\r\n    render() {\r\n        return <Board ref={this.canvas_ref} width={this.state.inner_width} height={this.state.inner_height} />;\r\n    }\r\n}\r\n\r\nexport default Canvas;\r\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Layout from './Layout';\nimport AboutMe from './about_me/AboutMe';\nimport Canvas from './animation/Canvas';\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        margin: 0;\n        font-family: 'Courier New', Courier, monospace;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n\n    code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n    }\n`;\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <>\n                <GlobalStyle />\n                <Canvas />\n                <Layout>\n                    <AboutMe />\n                </Layout>\n            </>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}