{"version":3,"sources":["assets/Background.jpg","components/navbar/NavBar.js","components/about_me/AboutMe.js","components/Layout.js","components/about_me/MyProjects.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBarContainer","styled","div","NavGroup","Link","a","props","color","design_presets","white","Name","p","blue","NavBar","state","my_name","typing_name","name_index","time_elapsed","start_fps","Date","getTime","animate_name","bind","this","now","setState","length","substr","requestAnimationFrame","href","React","Component","Container","AboutMeContainer","Welcome","design_preset","Description","DownloadButton","button","AboutMe","GridContainer","GridBody","GridHeader","BackgroundImage","Layout","children","ProjectsHeader","Title","grey","FilterContainer","FilterButton","ProjectsBody","MyProjects","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,wC,4jCCI3C,IAAMC,EAAkBC,IAAOC,IAAV,KASfC,EAAWF,IAAOC,IAAV,KAQRE,EAAOH,IAAOI,EAAV,KAEG,SAACC,GAAD,OAAYA,EAAMC,MAAQD,EAAMC,MAAQC,EAAe,kBAAkBC,SAUhFC,EAAOT,IAAOU,EAAV,IAGGH,EAAe,kBAAkBI,MA4D/BC,E,kDAnDX,WAAYP,GAAQ,IAAD,8BACf,cAAMA,IACDQ,MAAQ,CACTC,QAAS,eACTC,YAAa,GACbC,WAAY,EACZC,aAAc,IAElB,EAAKC,WAAY,IAAIC,MAAOC,UAC5B,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBATL,E,gEAafC,KAAKF,iB,qCAIL,IAAIG,GAAM,IAAIL,MAAOC,UAEjBI,EAAMD,KAAKL,WAAaK,KAAKV,MAAMI,eAC/BM,KAAKV,MAAME,cAAgBQ,KAAKV,MAAMC,QACtCS,KAAKE,SAAS,CACVV,YAAaQ,KAAKV,MAAME,YAAcQ,KAAKV,MAAMC,QAAQS,KAAKV,MAAMG,YACpEA,YAAaO,KAAKV,MAAMG,WAAa,GAAKO,KAAKV,MAAMC,QAAQY,SAGjEH,KAAKE,SAAS,CACVV,YAAaQ,KAAKV,MAAMC,QAAQa,OAAO,EAAGJ,KAAKV,MAAMC,QAAQY,OAAS,GACtEV,WAAYO,KAAKV,MAAMC,QAAQY,OAAS,EACxCT,aAAc,MAGtBM,KAAKL,UAAYM,GAGrBI,sBAAsBL,KAAKF,gB,+BAI3B,OACI,kBAACtB,EAAD,KACI,kBAACU,EAAD,KAAOc,KAAKV,MAAME,aAClB,kBAACb,EAAD,KACI,kBAACC,EAAD,CAAM0B,KAAM,kCAAZ,UACA,kBAAC1B,EAAD,CAAM0B,KAAM,oDAAZ,kB,GA7CCC,IAAMC,W,wsCCxC3B,IAAMC,EAAYhC,IAAOC,IAAV,KAUTgC,EAAmBjC,IAAOC,IAAV,KAMhBiC,EAAUlC,IAAOU,EAAV,IAEAyB,EAAc,kBAAkB3B,OAKvC4B,EAAcpC,IAAOU,EAAV,IACJyB,EAAc,kBAAkB3B,OAIvC6B,EAAiBrC,IAAOsC,OAAV,IAUPH,EAAc,kBAAkBxB,MAuC9B4B,E,kDArBX,WAAYlC,GAAQ,uCACVA,G,qDAIN,OACI,kBAAC2B,EAAD,KACI,kBAACC,EAAD,KACI,kBAACC,EAAD,gBACA,kBAACE,EAAD,gPAKA,kBAACC,EAAD,0B,GAfEP,IAAMC,W,snBCrD5B,IAAMS,EAAgBxC,IAAOC,IAAV,KAQbwC,EAAWzC,IAAOC,IAAV,KAMRyC,EAAa1C,IAAOC,IAAV,IAMY0C,KAuBbC,E,kDAjBX,WAAYvC,GAAQ,uCACVA,G,qDAIN,OACI,kBAACmC,EAAD,KACI,kBAACE,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,kBAACD,EAAD,KAAWlB,KAAKlB,MAAMwC,e,GAZjBf,IAAMC,W,uwCC3B3B,IAAMC,EAAYhC,IAAOC,IAAV,KAOT6C,EAAiB9C,IAAOC,IAAV,KAOd8C,EAAQ/C,IAAOU,EAAV,IAIEyB,EAAc,kBAAkBa,MAKvCC,EAAkBjD,IAAOC,IAAV,KAQfiD,GAAelD,IAAOsC,OAAV,IAKLH,EAAc,kBAAkBa,KAErBb,EAAc,kBAAkBa,KASvCb,EAAc,kBAAkBxB,KAI3BwB,EAAc,kBAAkBa,KACrCb,EAAc,kBAAkB3B,OAK3C2C,GAAenD,IAAOC,IAAV,KAuBHmD,G,kDApBX,WAAY/C,GAAQ,uCACVA,G,qDAIN,OACI,kBAAC,EAAD,KACI,kBAACyC,EAAD,KACI,kBAACC,EAAD,uBACA,kBAACE,EAAD,KACI,kBAACC,GAAD,aACA,kBAACA,GAAD,qBAGR,kBAACC,GAAD,W,GAfSrB,IAAMC,W,+sBC1D/B,IAAMsB,GAAcC,YAAH,MA4CFC,G,kDAhBX,WAAYlD,GAAQ,uCACVA,G,qDAIN,OACI,oCACI,kBAACgD,GAAD,MACA,kBAAC,EAAD,KACI,kBAAC,GAAD,Y,GAVFvB,IAAMC,WCpBJyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,GAAD,OAEJC,SAASC,eAAe,SD0HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.40c7acf3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Background.120cee48.jpg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport design_presets from '../design_presets/presets.json';\r\n\r\nconst NavBarContainer = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 15px;\r\n    height: 100%;\r\n    width: 100%;\r\n`;\r\n\r\nconst NavGroup = styled.div`\r\n    position: relative;\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n    margin-right: 130px;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst Link = styled.a`\r\n    text-decoration: none;\r\n    color: ${(props) => (props.color ? props.color : design_presets['general-colors'].white)};\r\n    &:link,\r\n    &:visited {\r\n        text-decoration: none;\r\n        color: inherited;\r\n    }\r\n    margin-right: 20px;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst Name = styled.p`\r\n    display: flex;\r\n    align-items: center;\r\n    color: ${design_presets['general-colors'].blue};\r\n    font-size: 35px;\r\n    font-weight: bold;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    margin-left: 150px;\r\n`;\r\n\r\nclass NavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            my_name: 'MANDU SHI ._',\r\n            typing_name: '',\r\n            name_index: 0,\r\n            time_elapsed: 50, //ms\r\n        };\r\n        this.start_fps = new Date().getTime();\r\n        this.animate_name = this.animate_name.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.animate_name();\r\n    }\r\n\r\n    animate_name() {\r\n        var now = new Date().getTime();\r\n\r\n        if (now - this.start_fps >= this.state.time_elapsed) {\r\n            if (this.state.typing_name !== this.state.my_name) {\r\n                this.setState({\r\n                    typing_name: this.state.typing_name + this.state.my_name[this.state.name_index],\r\n                    name_index: (this.state.name_index + 1) % this.state.my_name.length,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    typing_name: this.state.my_name.substr(0, this.state.my_name.length - 3),\r\n                    name_index: this.state.my_name.length - 3,\r\n                    time_elapsed: 300,\r\n                });\r\n            }\r\n            this.start_fps = now;\r\n        }\r\n\r\n        requestAnimationFrame(this.animate_name);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavBarContainer>\r\n                <Name>{this.state.typing_name}</Name>\r\n                <NavGroup>\r\n                    <Link href={'https://github.com/KingCollege'}>GITHUB</Link>\r\n                    <Link href={'https://www.linkedin.com/in/mandu-shi-87a90b1a6/'}>LINKEDIN</Link>\r\n                </NavGroup>\r\n            </NavBarContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport design_preset from '../design_presets/presets.json';\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst AboutMeContainer = styled.div`\r\n    height: auto;\r\n    width: 700px;\r\n    margin: auto;\r\n`;\r\n\r\nconst Welcome = styled.p`\r\n    position: relative;\r\n    color: ${design_preset['general-colors'].white};\r\n    font-size: 2rem;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst Description = styled.p`\r\n    color: ${design_preset['general-colors'].white};\r\n    font-size: 1rem;\r\n`;\r\n\r\nconst DownloadButton = styled.button`\r\n    background: transparent;\r\n    -webkit-transition: background-color 500ms linear;\r\n    -ms-transition: background-color 500ms linear;\r\n    transition: background-color 500ms linear;\r\n\r\n    padding: 10px;\r\n    padding-left: 25px;\r\n    padding-right: 25px;\r\n    border: 2px solid white;\r\n    color: ${design_preset['general-colors'].blue};\r\n    border-radius: 15px;\r\n    font-weight: bold;\r\n    &:active {\r\n        outline: none;\r\n    }\r\n\r\n    &:hover {\r\n        background: white;\r\n        color: black;\r\n    }\r\n\r\n    &:focus {\r\n        outline: 0;\r\n    }\r\n`;\r\n\r\nclass AboutMe extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <AboutMeContainer>\r\n                    <Welcome>Welcome</Welcome>\r\n                    <Description>\r\n                        ...I am a recent graduate with a Computer Science degree. I am passionate about anything related\r\n                        to programming and problem solving. To learn more about me please visit my GitHub page, LinkedIn\r\n                        or have a look at some of projects ._\r\n                    </Description>\r\n                    <DownloadButton>DOWNLOAD CV</DownloadButton>\r\n                </AboutMeContainer>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutMe;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport NavBar from './navbar/NavBar';\r\nimport AboutMe from './about_me/AboutMe';\r\nimport BackgroundImage from '../assets/Background.jpg';\r\n\r\nconst GridContainer = styled.div`\r\n    position: absolute;\r\n    display: grid;\r\n    grid-template-rows: 800px 1fr;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst GridBody = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst GridHeader = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-rows: 80px 1fr;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${BackgroundImage});\r\n    background-size: cover;\r\n    background-position: center center;\r\n`;\r\n\r\nclass Layout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <GridContainer>\r\n                <GridHeader>\r\n                    <NavBar />\r\n                    <AboutMe />\r\n                </GridHeader>\r\n                <GridBody>{this.props.children}</GridBody>\r\n            </GridContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport design_preset from '../design_presets/presets.json';\r\n\r\nconst Container = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 200px 1fr;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst ProjectsHeader = styled.div`\r\n    display: grid;\r\n    grid-template-rows: auto 1fr;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst Title = styled.p`\r\n    margin-left: 150px;\r\n    margin-bottom: 15px;\r\n    position: relative;\r\n    color: ${design_preset['general-colors'].grey};\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n    margin-left: 150px;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    width: auto;\r\n    height: 40px;\r\n`;\r\n\r\nconst FilterButton = styled.button`\r\n    background: transparent;\r\n    padding: 10px;\r\n    padding-left: 25px;\r\n    padding-right: 25px;\r\n    color: ${design_preset['general-colors'].grey};\r\n    border-radius: 15px;\r\n    border: 2px solid ${design_preset['general-colors'].grey};\r\n    font-weight: bold;\r\n    margin: 0;\r\n    margin-right: 15px;\r\n    &:active {\r\n        outline: none;\r\n    }\r\n\r\n    &:hover {\r\n        color: ${design_preset['general-colors'].blue};\r\n    }\r\n\r\n    &:focus {\r\n        background: ${design_preset['general-colors'].grey};\r\n        color: ${design_preset['general-colors'].white};\r\n        outline: 0;\r\n    }\r\n`;\r\n\r\nconst ProjectsBody = styled.div``;\r\n\r\nclass MyProjects extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <ProjectsHeader>\r\n                    <Title>MY PROJECTS ._</Title>\r\n                    <FilterContainer>\r\n                        <FilterButton>JAVA</FilterButton>\r\n                        <FilterButton>JAVASCRIPT</FilterButton>\r\n                    </FilterContainer>\r\n                </ProjectsHeader>\r\n                <ProjectsBody></ProjectsBody>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyProjects;\r\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Layout from './Layout';\nimport MyProjects from '../components/about_me/MyProjects';\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        margin: 0;\n        font-family: \"Nirmala UI\", \"Times New Roman\", Times, serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n         scrollbar-width: none;\n    }\n\n    body::-webkit-scrollbar {\n        display: none;\n    }   \n\n    p, a, button {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -khtml-user-select: none;\n        -moz-user-select: none; \n        -ms-user-select: none; \n        user-select: none; \n    }\n\n    code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n    }\n`;\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <>\n                <GlobalStyle />\n                <Layout>\n                    <MyProjects />\n                </Layout>\n            </>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}